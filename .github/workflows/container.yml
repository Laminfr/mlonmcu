name: Build Docker Containers
on:
  workflow_dispatch:
    inputs:
      enable_cmake:
        description: 'Install up-to-date CMake version'
        required: true
        default: "true"
      version:
        description: 'Version Tag'
        required: true
        default: "latest"
      enable_bench:
        description: 'Build very large image for benchmarking'
        required: true
        default: "false"
      template:
        description: 'Used environment.yml template for benchmarking'
        required: true
        default: "default"

jobs:
  minimal:
    name: Build minimal image for CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          recursive: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push (CMake)
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile
          pull: true
          push: true
          target: cmake-install
          build-args: |
            ENABLE_CMAKE=${{ github.event.inputs.enable_cmake}}
            MLONMCU_TEMPLATE=${{ github.event.inputs.template }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}-cmake:${{ github.event.inputs.version }}
          cache-to: type=inline
          tags: ghcr.io/${{ github.repository }}-cmake:${{ github.event.inputs.version }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile
          pull: true
          push: true
          target: mlonmcu-ci
          build-args: |
            ENABLE_CMAKE=${{ github.event.inputs.enable_cmake}}
            MLONMCU_TEMPLATE=${{ github.event.inputs.template }}
          cache-from: |
            type=registry,ref=ghcr.io/${{ github.repository }}-cmake:${{ github.event.inputs.version }}
            type=registry,ref=ghcr.io/${{ github.repository }}-ci:${{ github.event.inputs.version }}
          cache-to: type=inline
          tags: ghcr.io/${{ github.repository }}-ci:${{ github.event.inputs.version }}
  base:
    name: Build base image for users
    runs-on: ubuntu-latest
    needs: minimal
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          recursive: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile
          pull: true
          push: true
          target: mlonmcu
          cache-from: |
            type=registry,ref=ghcr.io/${{ github.repository }}-cmake:${{ github.event.inputs.version }}
            type=registry,ref=ghcr.io/${{ github.repository }}-ci:${{ github.event.inputs.version }}
          cache-to: type=inline
          tags: ghcr.io/${{ github.repository }}:${{ github.event.inputs.version }}
  bench:
    name: Build large image for benchmarking
    runs-on: ubuntu-latest
    needs: base
    if: ${{ github.event.inputs.enable_bench }} == true
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          recursive: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile
          pull: true
          push: true
          target: mlonmcu-bench
          build-args: |
            MLONMCU_TEMPLATE=${{ github.event.inputs.template}}
          cache-from: |
            type=registry,ref=ghcr.io/${{ github.repository }}-cmake:${{ github.event.inputs.version }}
            type=registry,ref=ghcr.io/${{ github.repository }}-ci:${{ github.event.inputs.version }}
            type=registry,ref=ghcr.io/${{ github.repository }}:${{ github.event.inputs.version }}
          cache-to: type=inline
          tags: ghcr.io/${{ github.repository }}-bench:${{ github.event.inputs.version }}
