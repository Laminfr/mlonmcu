# GitHub CI build pipeline
name: CI build

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v2
      id: cache-venv  # name for referring later
      with:
        path: ./.venv/  # what we cache: the virtualenv
        # The cache key depends on requirements[_dev].txt
        key: ${{ runner.os }}-${{ matrix.python-version }}-venv-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-venv-
    - name: Initialize Virtualenv
      run: |
        python -m pip install --upgrade pip
        python -m venv .venv
    - name: Install dependencies
      run: |
        source .venv/bin/activate
        if  [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if  [ -f requirements_dev.txt ]; then pip install -r requirements_dev.txt; fi
        if  [ -f docs/requirements.txt ]; then pip install -r docs/requirements.txt; fi
    - name: Run package creation
      run: |
        source .venv/bin/activate && make install
    - name: Archive package
      uses: actions/upload-artifact@v2
      with:
        name: mlonmcu
        path: dist/
    - name: Run Unit Tests and generate coverage report
      run: |
        source .venv/bin/activate && make coverage
    - name: Archive code coverage html report
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-report
        path: htmlcov
    - name: Get coverage percentage (WIP)
      run: "##[set-output name=percent;]$(coverage report | awk '$1 == \"TOTAL\" {print $NF+0 \"%\"}')"
    - name: Create coverage badge (WIP)
        uses: RubbaBoy/BYOB@v1.2.1
        with:
          NAME: coverage
          LABEL: 'Coverage'
          STATUS: ${{ steps.date.outputs.percent }}
          COLOR: orange
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Build docs
      run: |
        source .venv/bin/activate
        make docs
    - name: Deploy docs
      uses: peaceiris/actions-gh-pages@v3
      if: ${{ github.ref == 'refs/heads/main' }}
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/_build/html

