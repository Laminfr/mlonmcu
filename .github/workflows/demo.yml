# ML on MCU demonstration (also serves as end-to-end testj
# TODO: provide docker image with apt packages
name: Usage Demo

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  demo:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
        template: ["default", "minimal"]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    # TODO: caching
    - name: Install APT packages
      run: |
        sudo apt -qq install -y g++ libboost-all-dev libboost-system-dev libboost-filesystem-dev libboost-program-options-dev graphviz doxygen libtinfo-dev zlib1g-dev texinfo unzip device-tree-compiler
        sudo apt -qq install -y ninja-build
        sudo apt remove clang-11* llvm-11*
    - name: Initialize Virtualenv
      run: |
        python -m pip install --upgrade pip
        python -m venv .venv
    - name: Install dependencies
      run: |
        source .venv/bin/activate
        pip install -r requirements.txt
    - name: Run package creation
      run: |
        source .venv/bin/activate
        make install
    - name: Initialize MLonMCU environment
      run: |
        source .venv/bin/activate
        mlonmcu init home/ --non-interactive --template ${{ matrix.template }} --clone-models
    - name: Setup MLonMCU dependencies
      run: |
        source .venv/bin/activate
        mlonmcu setup -H home/ -v
    - name: Run MLonMCU flow
      run: |
        source .venv/bin/activate
        mlonmcu flow run sine_model -H home/ -v
        mlonmcu export -H home/ session.zip
    - name: Remove dependencies (too large for artifact)
      run: |
        source .venv/bin/activate
        mlonmcu cleanup -H home/ -f --deps
    - name: Archive environment (without deps)
      uses: actions/upload-artifact@v2
      with:
        name: mlonmcu_home
        path: home/
